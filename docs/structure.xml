<?xml version="1.0" encoding="utf-8"?>
<project title="Enumerations for php" version="2.1.0&#10;">
  <partials/>
  <file path="Enumeration.php" generated-path="Enumeration.html" hash="d86de4101334739e534ea7d0073159a1" package="Default">
    <docblock line="0">
      <description>Enumerations</description>
      <long-description>Licensed under the BSD (3-Clause) license
For full copyright and license information, please see the LICENSE file</long-description>
      <tag name="copyright" line="0" description="2013 Robert Rossmann"/>
      <tag name="author" line="0" description="Robert Rossmann" link="mailto:rr.rossmann@me.com"/>
      <tag name="link" line="0" description="https://github.com/Dreamscapes/Enumeration" link="https://github.com/Dreamscapes/Enumeration"/>
      <tag name="license" line="0" description="BSD (3-Clause) License" link="http://choosealicense.com/licenses/bsd-3-clause"/>
    </docblock>
    <class final="false" abstract="false" namespace="Dreamscapes" line="26" package="Enumeration">
      <extends/>
      <name>Enumeration</name>
      <full_name>\Dreamscapes\Enumeration</full_name>
      <docblock line="26">
        <description>The Enumeration class</description>
        <long-description>All enumerations should extend this class. Enumerated members
should be defined as class constants.</long-description>
        <tag name="package" line="26" description="Enumeration"/>
      </docblock>
      <property static="true" visibility="private" line="29" namespace="Dreamscapes" package="Enumeration">
        <name>$instances</name>
        <default>array()</default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" line="32" namespace="Dreamscapes" package="Enumeration">
        <name>$value</name>
        <default></default>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="true" abstract="false" static="false" visibility="private" namespace="Dreamscapes" line="41" package="Enumeration">
        <name>__construct</name>
        <full_name>\Dreamscapes\Enumeration::__construct()</full_name>
        <docblock line="41">
          <description>Instances are not allowed to be created by users</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;The enumerated member's name&lt;/p&gt;&#10;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="41" description="&lt;p&gt;The enumerated member's value&lt;/p&gt;&#10;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Dreamscapes" line="74" package="Enumeration">
        <name>getName</name>
        <full_name>\Dreamscapes\Enumeration::getName()</full_name>
        <docblock line="74">
          <description>Get the name of the member that holds given value</description>
          <long-description>&lt;p class="alert"&gt;This method is type-sensitive - see the example below.&lt;/p&gt;
&lt;h3&gt;Use case&lt;/h3&gt;
You have a value that is defined in an enumeration and you would like
to know the name of the enumeration member that holds this value.

&lt;h3&gt;Example&lt;/h3&gt;
&lt;code&gt;
class Animal extends Dreamscapes\Enumeration
{
  const Horse = 0;
  const Dog = 1;
}

echo Animal::getName( 0 ); // Prints 'Horse'
echo Animal::getName( '0' ); // Returns null, method is type-sensitive
&lt;/code&gt;</long-description>
          <tag name="param" line="74" description="&lt;p&gt;The member's expected value. &lt;b&gt;The&#10;                                  value must be of the same type as defined&#10;                                  in the Enumeration.&lt;/b&gt;&lt;/p&gt;&#10;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="return" line="74" description="The name of the member that holds this value, null&#10;                       if no such member exists" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Dreamscapes" line="104" package="Enumeration">
        <name>getValue</name>
        <full_name>\Dreamscapes\Enumeration::getValue()</full_name>
        <docblock line="104">
          <description>Get the value of a given member's name</description>
          <long-description>&lt;h3&gt;Use case&lt;/h3&gt;
You have a string representation of the Enumeration member and you would
like to know the value that member holds.

&lt;h3&gt;Example&lt;/h3&gt;
&lt;code&gt;
class Animal extends Dreamscapes\Enumeration
{
  const Horse = 0;
  const Dog = 1;
}

echo Animal::getValue( 'Dog' ); // Prints an integer, 1
&lt;/code&gt;</long-description>
          <tag name="param" line="104" description="&lt;p&gt;The member's expected name&lt;/p&gt;&#10;" type="string|\Dreamscapes\Enumeration" variable="$member">
            <type>string</type>
            <type link="Enumeration.html">\Dreamscapes\Enumeration</type>
          </tag>
          <tag name="return" line="104" description="The value of the member" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$member</name>
          <default></default>
          <type>string|\Dreamscapes\Enumeration</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Dreamscapes" line="132" package="Enumeration">
        <name>isDefined</name>
        <full_name>\Dreamscapes\Enumeration::isDefined()</full_name>
        <docblock line="132">
          <description>Does a member with this name exist in the enumeration?</description>
          <long-description>&lt;h3&gt;Example&lt;/h3&gt;
&lt;code&gt;
class Animal extends Dreamscapes\Enumeration
{
  const Horse = 0;
  const Dog = 1;
}

echo Animal::isDefined( 'Dog' ); // Prints an integer, 1 (bool true)
echo Animal::isDefined( 'Cat' ); // Prints nothing (bool false)
&lt;/code&gt;</long-description>
          <tag name="param" line="132" description="&lt;p&gt;The member's expected name&lt;/p&gt;&#10;" type="string" variable="$member">
            <type>string</type>
          </tag>
          <tag name="return" line="132" description="&lt;b&gt;true&lt;/b&gt; if such member is defined, &lt;b&gt;false&lt;/b&gt; otherwise" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$member</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Dreamscapes" line="161" package="Enumeration">
        <name>allMembers</name>
        <full_name>\Dreamscapes\Enumeration::allMembers()</full_name>
        <docblock line="161">
          <description>Get all members defined in this Enumeration</description>
          <long-description>&lt;p class="alert"&gt;The returned array's order is determined by the order
in which the constants are defined in the class.&lt;/p&gt;

&lt;h3&gt;Example&lt;/h3&gt;
&lt;code&gt;
class Animal extends Dreamscapes\Enumeration
{
  const Horse = 0;
  const Dog = 1;
}

print_r( Animal::allMembers() );
// Array
// (
//   0 =&gt; 'Horse'
//   1 =&gt; 'Dog'
// )
&lt;/code&gt;</long-description>
          <tag name="return" line="161" description="An ordered list of all Enumeration members" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Dreamscapes" line="187" package="Enumeration">
        <name>toArray</name>
        <full_name>\Dreamscapes\Enumeration::toArray()</full_name>
        <docblock line="187">
          <description>Convert the Enumeration into an array</description>
          <long-description>&lt;h3&gt;Example&lt;/h3&gt;
&lt;code&gt;
class Animal extends Dreamscapes\Enumeration
{
  const Horse = 0;
  const Dog = 1;
}

print_r( Animal::allMembers() );
// Array
// (
//   'Horse' =&gt; 0
//   'Dog' =&gt; 1
// )
&lt;/code&gt;</long-description>
          <tag name="return" line="187" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Dreamscapes" line="209" package="Enumeration">
        <name>getType</name>
        <full_name>\Dreamscapes\Enumeration::getType()</full_name>
        <docblock line="209">
          <description>Get the string representation of the Enumeration, without namespace</description>
          <long-description>&lt;h3&gt;Example&lt;/h3&gt;
&lt;code&gt;
namespace Fauna;

class Animal extends Dreamscapes\Enumeration {}

echo Animal::getType(); // Animal
echo Dreamscapes\Enumeration::getType(); // Enumeration
&lt;/code&gt;</long-description>
          <tag name="return" line="209" description="The name of the Enumeration class, without namespace" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Dreamscapes" line="233" package="Enumeration">
        <name>value</name>
        <full_name>\Dreamscapes\Enumeration::value()</full_name>
        <docblock line="233">
          <description>Get the value of the enumerated member represented by this instance</description>
          <long-description></long-description>
          <tag name="return" line="233" description="Value of the enumerated member" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Dreamscapes" line="243" package="Enumeration">
        <name>__toString</name>
        <full_name>\Dreamscapes\Enumeration::__toString()</full_name>
        <docblock line="243">
          <description>Allow enumeration members to be typecast to strings</description>
          <long-description></long-description>
          <tag name="return" line="243" description="The value of the enumeration member in a string representation" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="true" visibility="private" namespace="Dreamscapes" line="256" package="Enumeration">
        <name>getMemberInstance</name>
        <full_name>\Dreamscapes\Enumeration::getMemberInstance()</full_name>
        <docblock line="256">
          <description>Factory for enumeration members' instance representations</description>
          <long-description></long-description>
          <tag name="param" line="256" description="&lt;p&gt;The class for which the instance should be obtained/generated&lt;/p&gt;&#10;" type="string" variable="$enumeration">
            <type>string</type>
          </tag>
          <tag name="param" line="256" description="&lt;p&gt;The enumerated member's name to retrieve&lt;/p&gt;&#10;" type="string" variable="$member">
            <type>string</type>
          </tag>
          <tag name="return" line="256" description="An instance of the Enumeration subclass, representing the given member's value" type="\Dreamscapes\Enumeration">
            <type link="Enumeration.html">\Dreamscapes\Enumeration</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$enumeration</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$member</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="private" namespace="Dreamscapes" line="272" package="Enumeration">
        <name>triggerUndefinedConstantError</name>
        <full_name>\Dreamscapes\Enumeration::triggerUndefinedConstantError()</full_name>
        <docblock line="272">
          <description>Trigger an error that php triggers when attempting to access undefined class constant</description>
          <long-description></long-description>
          <tag name="param" line="272" description="&lt;p&gt;The name of the constant being accessed&lt;/p&gt;" type="string" variable="$const">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$const</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Enumeration" full_name="Enumeration"/>
  <namespace name="Dreamscapes" full_name="Dreamscapes"/>
  <deprecated count="0"/>
</project>
